---
import type { Category } from "../../types/enums/Category";
import type { Product } from "../../types/interface/product";
import type { StrapiResponse } from "../../types/interface/strapi-response";
import Button from "../shared/Button.astro";
import { getBaseUrl } from "../../utils/getBaseURL";

interface Props {
  product: Product;
  category: Category;
}

const baseUrl = getBaseUrl();

const { product, category } = Astro.props;

let productList: Product[] = [];

const loadProductList = async () => {
  const res = await fetch(`${baseUrl}/api/products?populate=*`);
  let { data }: StrapiResponse<Product> = await res.json();
  data = data.sort((a, b) => {
    let categoryA = a.category.name === category ? 1 : 0;
    let categoryB = b.category.name === category ? 1 : 0;
    return categoryB - categoryA;
  });

  productList = data.filter((item) => item.id !== product.id).slice(0, 3);
};

await loadProductList();
---

<section class="flex align-c just-c flex-d-c">
  <h2 class="color-b font-s-32 bold font-lh-36">YOU MAY ALSO LIKE</h2>

  <div class="flex w-100">
    {
      productList.map((product) => (
        <article class="h-100 w-100 flex flex-d-c align-c just-c">
          <div class="flex w-100 just-c align-c border-r-8 bg-s-g">
            <img
              src={getBaseUrl() + product.mainImage.url}
              alt="product-image"
              class="product-image border-r-8"
            />
          </div>
          <h3 class="font-s-24 color-b bold">
            {product.name.split(" ")[0].toUpperCase()}
          </h3>
          <Button
            id={product.id.toString()}
            background="bg-c recommended-button"
            text="SEE PRODUCT"
          />
        </article>
      ))
    }
  </div>
</section>

<style>
  section {
    margin-top: 160px;
    gap: 64px;
  }

  h2 {
    letter-spacing: 1.143px;
  }

  h3 {
    letter-spacing: 1.714px;
    margin-top: 40px;
  }

  section > div {
    gap: 30px;
    height: 47.1rem;
  }

  article > div {
    height: 31.8rem;
  }
  img {
    width: 80%;
  }

  /* Tablet */
  @media (max-width: 58.25rem) {
    section {
      gap: 56px;
      margin-top: 120px;
    }
    section > div {
      gap: 11px;
    }
    h3 {
      text-align: center;
    }
  }

  /* Mobile */
  @media (max-width: 30rem) {
    h2 {
      font-size: 2.4rem;
    }
    section {
      gap: 40px;
    }

    section > div {
      flex-direction: column;
      height: 100%;
      gap: 56px;
    }
    article > div {
      height: 12rem;
    }
    article > div > img {
      height: 12rem;
      width: auto;
    }

    h3 {
      margin-top: 32px;
    }
  }
</style>

<style is:global>
  .recommended-button {
    margin-top: 32px;
  }
</style>

<script define:vars={{ productList }}>
  productButtons = productList.map((product) =>
    document.getElementById(product.id)
  );

  productButtons.forEach((product) => {
    product.addEventListener("click", (e) => {
      const id = e.target.id;
      const product = productList.find((product) => product.id == id);
      window.location.href =
        window.location.origin + `/${product.category.name}/${product.slug}`;
    });
  });
</script>
